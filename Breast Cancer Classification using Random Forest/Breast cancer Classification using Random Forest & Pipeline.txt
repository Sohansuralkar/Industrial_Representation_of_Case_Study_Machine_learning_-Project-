This Project Demonstrate an end to end machine learning pipeline for predicting breast cancer diagnosis (Benign vs Malignant)
using the Breast cancer Wisconsin dataset.

It follows industrial best practices by:-
1) Automating preprocessing with pipelines.
2) Handling missing values using SimpleImputer.
3) Using Random Forest Classifier as a robust Baseline.
4) Saving and loading trained models using joblib.
5) Providing data visualization for inerpretability.

Dependencies :- 
Install required Python package before running project.
PIP install pandas numpy matplotlib scikit-learn joblib

DataSet Information
Source :- UCI machine learning Repository  :Breast Cancer Wisconsin Dataset

Features: 
1)  ClumThickness
2)  UniformityCellSize
3)  UniformityCellShape 
4)  MarginalAdhesion 
5)  SingleEpithelialCellSize 
6)  BaraNuclei 
7)  BlandChromatin 
8)  NormalNucleoli
9)  Mitoes

Target :
.  2 = Benign
.  4 = Malignant

WorFlow

Data Preparation

. Convert raw .data file to .csv with headers
. Replace Missing values (?) with NaN
. Ensure Numeric type conversion for all feature column

Train-Test-Split:
. Split data into 70% Train and 30% Test
. Use stratified sampling to preserve class balance

PipeLine Construstion

Step 1:- SimpleImputer(Strategy="median") for missing value handling.
step 2:- RandomForestClassifier with 300 estimators for classification.

Model Training and Evaluation:- 
. Metrics : Accuracy, Confusion Matrix, Classification report.
. Feature Importance Plot:- show most influential features.

Model Saving and Loading 

.Save Model with JobLib
.Load Model for future predictions without retraining.


Running The Project 
Prepare CSV (ONLY once)

from breast_cancer_pipeline  ddata_file_to_csv
data_file_to_csv()

Train and Evaluate Model

python breast_cancer_pipeline.py

Expected OutPut:

Train Accuracy :: 1.0 (100percent)
Test Accuracy ::  0.97

Classification Report:
		precision recall F1-score support
...
Confusion Matrix:
[[...]]
Model Saved to bc_rf_pipeline.joblib
Loaded Model prediction for first test sample: 2

Visualization 
. Feature Importance (Random Forest)
. Confusion Matrix With matplotlib

Model Storage
. Model is saved as bc_rf_pipeline.joblib
. Can be loaded anytime for prediction without retraining.

from breast_cancer_pipeline import load_model
model = load_model("bc_rf_pipeline.joblib")

Sample Prediction

Sample = test_x.iloc[[0]]
pred = model.predict(sample)
print("Prediction:",pred[0])  # 2 (Benign) or 4 (Malignant)

Author 
 Sohan Satish Suralkar
 Date : 14/08/2025
 Day :  Thursday




  